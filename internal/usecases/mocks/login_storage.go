// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ilya-rusyanov/gophermart/internal/usecases (interfaces: LoginStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	entities "github.com/ilya-rusyanov/gophermart/internal/entities"
)

// MockLoginStorage is a mock of LoginStorage interface.
type MockLoginStorage struct {
	ctrl     *gomock.Controller
	recorder *MockLoginStorageMockRecorder
}

// MockLoginStorageMockRecorder is the mock recorder for MockLoginStorage.
type MockLoginStorageMockRecorder struct {
	mock *MockLoginStorage
}

// NewMockLoginStorage creates a new mock instance.
func NewMockLoginStorage(ctrl *gomock.Controller) *MockLoginStorage {
	mock := &MockLoginStorage{ctrl: ctrl}
	mock.recorder = &MockLoginStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoginStorage) EXPECT() *MockLoginStorageMockRecorder {
	return m.recorder
}

// FindCredentials mocks base method.
func (m *MockLoginStorage) FindCredentials(arg0 context.Context, arg1 entities.AuthCredentials) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindCredentials", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// FindCredentials indicates an expected call of FindCredentials.
func (mr *MockLoginStorageMockRecorder) FindCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindCredentials", reflect.TypeOf((*MockLoginStorage)(nil).FindCredentials), arg0, arg1)
}
