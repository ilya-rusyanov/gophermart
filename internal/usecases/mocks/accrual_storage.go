// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ilya-rusyanov/gophermart/internal/usecases (interfaces: AccrualStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	entities "github.com/ilya-rusyanov/gophermart/internal/entities"
)

// MockAccrualStorage is a mock of AccrualStorage interface.
type MockAccrualStorage struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualStorageMockRecorder
}

// MockAccrualStorageMockRecorder is the mock recorder for MockAccrualStorage.
type MockAccrualStorageMockRecorder struct {
	mock *MockAccrualStorage
}

// NewMockAccrualStorage creates a new mock instance.
func NewMockAccrualStorage(ctrl *gomock.Controller) *MockAccrualStorage {
	mock := &MockAccrualStorage{ctrl: ctrl}
	mock.recorder = &MockAccrualStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualStorage) EXPECT() *MockAccrualStorageMockRecorder {
	return m.recorder
}

// GetUnfinishedOrders mocks base method.
func (m *MockAccrualStorage) GetUnfinishedOrders(arg0 context.Context) (entities.OrderList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUnfinishedOrders", arg0)
	ret0, _ := ret[0].(entities.OrderList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUnfinishedOrders indicates an expected call of GetUnfinishedOrders.
func (mr *MockAccrualStorageMockRecorder) GetUnfinishedOrders(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUnfinishedOrders", reflect.TypeOf((*MockAccrualStorage)(nil).GetUnfinishedOrders), arg0)
}

// IncreaseBalance mocks base method.
func (m *MockAccrualStorage) IncreaseBalance(arg0 context.Context, arg1 entities.Login, arg2 entities.Currency) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseBalance", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncreaseBalance indicates an expected call of IncreaseBalance.
func (mr *MockAccrualStorageMockRecorder) IncreaseBalance(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseBalance", reflect.TypeOf((*MockAccrualStorage)(nil).IncreaseBalance), arg0, arg1, arg2)
}

// UpdateOrder mocks base method.
func (m *MockAccrualStorage) UpdateOrder(arg0 context.Context, arg1 entities.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrder", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOrder indicates an expected call of UpdateOrder.
func (mr *MockAccrualStorageMockRecorder) UpdateOrder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrder", reflect.TypeOf((*MockAccrualStorage)(nil).UpdateOrder), arg0, arg1)
}
